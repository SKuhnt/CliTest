version: 2.1
executors:
  my-executor:
    docker:
      - image: cimg/node:14.5
    working_directory: ~/ci_app

orbs:
  sfdx: circleci/salesforce-sfdx@2.1
jobs:
  SharedChanges:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth DevHub
          command: . ~/ci_app/ciScripts/authDevHub.sh
      - run:
          name: Prepare Git
          command: |
            git config --global user.email "activation@aquilliance.de"
            git config --global user.name "Automated Field update pull"
            git checkout master
            git fetch origin
            git reset --hard origin/master
      - run:
          name: Get changed Fields
          command: sfdx force:source:retrieve -u devHub -x customField.xml
      - run:
          name: Push to git if changes occured
          command: |
            git add force-app/main/default/objects
            git commit -m "objects changed." || true
            git push
  TestCode:
    #bug: no tests -> error
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth DevHub
          command: . ~/ci_app/ciScripts/authDevHub.sh
      - run:
          name: Create Scratch Org & Push data
          command: |
            . ~/ci_app/ciScripts/scratchCreate.sh
            sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM
      - run:
          name: run Tests
          command: |
            mkdir -p ~/junit
            sfdx force:apex:test:run -c -d ~/junit -r junit --wait 5 -u circle_build_$CIRCLE_BUILD_NUM
      - store_test_results:
          path: ~/junit
      - run:
          name: delete Scratch Org
          command: . ~/ci_app/ciScripts/scratchDelete.sh
      - store_artifacts:
          path: ~/junit
  TestDeployProd:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Prod
          command: . ~/ci_app/ciScripts/authProd.sh
      - run:
          name: Test Production Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u prod -d deploy_prod/ --wait -1 --testlevel RunLocalTests --checkonly
  DeployToProd:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Prod
          command: . ~/ci_app/ciScripts/authProd.sh
      - run:
          name: Production Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u prod -d deploy_prod/ --wait -1 --testlevel RunLocalTests
  TestDeployToUat:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth UAT Sandbox
          command: . ~/ci_app/ciScripts/authUat.sh
      - run:
          name: Test UAT Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u uat -d deploy_prod/ --wait -1 --testlevel RunLocalTests --checkonly
  DeployToUat:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth UAT Sandbox
          command: . ~/ci_app/ciScripts/authUat.sh
      - run:
          name: Test UAT Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u uat -d deploy_prod/ --wait -1 --testlevel RunLocalTests
  TestDeployToShared:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Shared Sandbox
          command: . ~/ci_app/ciScripts/authShared.sh
      - run:
          name: Test Shared Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u shared -d deploy_prod/ --wait -1 --testlevel RunLocalTests --checkonly
  DeployToShared:
    executor: my-executor
    steps:
      - sfdx/install
      - checkout
      - run:
          name: Auth Shared Sandbox
          command: . ~/ci_app/ciScripts/authShared.sh
      - run:
          name: Test Shared Deployment
          command: |
            sfdx force:source:convert -d deploy_prod -r force-app
            sfdx force:mdapi:deploy -u shared -d deploy_prod/ --wait -1 --testlevel RunLocalTests


workflows:
  basic-test:
    jobs:
      - TestCode
      - SharedChanges:
          name: Check Shared Changes
          filters:
            branches:
              ignore:
                - hotfix
                - prod
      - TestDeployToShared:
          name: Test Deployment to Shared
          requires:
            - TestCode
          filters:
            branches:
              ignore:
                - hotfix
                - prod
                - master
      - DeployToShared:
          name: Deployment to Shared
          requires:
            - TestCode
          filters:
            branches:
              only:
                - master
      - DeployToUat:
          name: Deployment to UAT
          requires:
            - Deployment to Shared
          filters:
            branches:
              only:
                - master
      - TestDeployProd:
          name: Test Deployment to Prod
          requires:
            - TestCode
          filters:
            branches:
              only:
                - master
      - RequestDeployToProd:
          name: Confirm Deployment to Production
          type: approval
          filters:
            branches:
              only:
                - prod
      - DeployToProd:
          name: Deployment to Production
          requires:
            - Confirm Deployment to Production
            - TestCode
          filters:
            branches:
              only:
                - prod


      # - TestCode
      # - Test_Deployment?:
      #     type: approval
      # - TestDeployProd:
      #     requires:
      #       - Test_Deployment?
